<div>
    <input name="form_key" type="hidden" value="<?php echo $block->getFormKey();?>">

    <section id="form-section">
        <input type="text" id="city-input" placeholder="Nh·∫≠p t√™n th√†nh ph·ªë">
        <button id="search-btn">T√¨m ki·∫øm</button>
    </section>

    <div class="error">
    </div>

    <section id="current-weather">
    </section>


    <h3 id="label-nextdays" style="display:none;">D·ª± b√°o th·ªùi ti·∫øt c√°c ng√†y t·ªõi</h3>
    <div id="forecast-container"></div>
    <div id="result"></div>
</div>
<link rel="stylesheet" href="<?= $block->getViewFileUrl('Bang_Weather::css/styles.css') ?>">
<script>
document.getElementById('search-btn').addEventListener('click', function() {
    const city = document.getElementById('city-input').value.trim();
    if (!city) {
        alert('Vui l√≤ng nh·∫≠p t√™n th√†nh ph·ªë.');
        return;
    }
    
    const formKey = document.querySelector('input[name="form_key"]').value;
    
    fetch('<?= $block->getReportActionUrl() ?>', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: `form_key=${formKey}&city=${encodeURIComponent(city)}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            document.querySelector(".error").innerHTML = `<p>${data.message}</p>`;
            document.getElementById("label-nextdays").style.display = "none";
            return;
        }
        
        displayWeatherData(data);
    })
    .catch(error => {
        console.error('Error:', error);
        document.querySelector(".error").innerHTML = '<p>C√≥ l·ªói x·∫£y ra khi l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt.</p>';
    });
});

// L·∫Øng nghe s·ª± ki·ªán nh·∫•n Enter
document.getElementById('city-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        document.getElementById('search-btn').click();
    }
});

function displayWeatherData(data) {
    document.getElementById("label-nextdays").style.display = "block";  
    const current = document.getElementById('current-weather');
    const nextDays = document.getElementById('forecast-container');
    const err = document.querySelector(".error");
    current.innerHTML = nextDays.innerHTML = '';
    err.innerHTML = '';

    const weekDays = ["Ch·ªß nh·∫≠t", "Th·ª© hai", "Th·ª© ba", "Th·ª© t∆∞", "Th·ª© nƒÉm", "Th·ª© s√°u", "Th·ª© 7"];

    data.list.forEach((day, index) => {
        const date = new Date(day.dt * 1000);
        const dateString = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
        const weekday = weekDays[date.getDay()];

        if (index === 0) {
            displayCurrentWeather(day, weekday, dateString, current);
        } else {
            displayForecastWeather(day, weekday, dateString, nextDays);
        }
    });
}

function displayCurrentWeather(day, weekday, dateString, container) {
    const currentInfo = document.createElement("div");
    currentInfo.id = "current-info";
    container.appendChild(currentInfo);
    container.style.display = "block";

    currentInfo.innerHTML = `
        <div class="main-weather-card">
            <div class="main-weather-left">
                <div class="main-weather-icon"><img src="http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png" alt=""></div>
                <div class="main-date">${weekday}, ${dateString}</div>
            </div>
            <div class="main-weather-right">
                <div class="main-temperature">${day.temp.day}¬∞C</div>
                <div class="main-temp-range">
                    <span>Th·∫•p: ${Math.round(day.temp.min)}¬∞C</span>
                    <span>Cao: ${Math.round(day.temp.max)}¬∞C</span>
                </div>
                <div class="main-weather-description">${day.weather[0].description}</div>
                <div class="main-weather-details">
                    <div class="main-detail">
                        <span class="main-detail-icon">üíß</span>
                        <span>ƒê·ªô ·∫©m: ${day.humidity}%</span>
                    </div>
                    <div class="main-detail">
                        <span class="main-detail-icon">üå¨Ô∏è</span>
                        <span>Gi√≥: ${day.speed} m/s</span>
                    </div>
                </div>
            </div>
        </div>
    `;
}

function displayForecastWeather(day, weekday, dateString, container) {
    const weatherCard = document.createElement('div');
    weatherCard.classList.add('weather-card');
    weatherCard.innerHTML = `
        <div class="weather-header">
            <div class="date">${weekday}, ${dateString}</div>
            <div class="weather-icon"><img src="http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png" alt=""></div>
        </div>
        <div class="temperature">${Math.round(day.temp.day)}¬∞C</div>
        <div class="temp-range">
            <span>Th·∫•p: ${Math.round(day.temp.min)}¬∞C</span>
            <span>Cao: ${Math.round(day.temp.max)}¬∞C</span>
        </div>
        <div class="weather-description">${day.weather[0].description}</div>
        <div class="weather-details">
            <div class="detail">
                <span>üíß</span>
                <span>${day.humidity}%</span>
            </div>
            <div class="detail">
                <span>üå¨Ô∏è</span>
                <span>${day.speed} m/s</span>
            </div>
        </div>
    `;
    container.appendChild(weatherCard);
}
</script>

<!-- 
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Th·ªùi ti·∫øt d·ª± b√°o</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        .weather-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
        }
        .weather-card {
            background-color: #f4f4f4;
            padding: 15px;
            margin: 10px;
            border-radius: 10px;
            width: 150px;
            text-align: center;
        }
        .weather-card h3 {
            margin: 0;
        }
        .weather-card img {
            width: 50px;
            height: 50px;
        }
        #city-input {
            padding: 10px;
            font-size: 16px;
            width: 250px;
        }
        #search-btn {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Th·ªùi ti·∫øt d·ª± b√°o 6 ng√†y</h1>
    
    //Input ƒë·ªÉ ng∆∞·ªùi d√πng nh·∫≠p t√™n th√†nh ph·ªë
    <input type="text" id="city-input" placeholder="Nh·∫≠p t√™n th√†nh ph·ªë">
    <button id="search-btn">T√¨m ki·∫øm</button>

    <div id="weather-info" class="weather-container"></div>

    <script>
        const apiKey = 'YOUR_API_KEY'; // Thay th·∫ø v·ªõi API key c·ªßa b·∫°n

        // H√†m l·∫•y th√¥ng tin th·ªùi ti·∫øt
        function getWeather(city) {
            const url = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${encodeURIComponent(city)}&cnt=6&appid=${encodeURIComponent(apiKey)}&units=metric&lang=vi`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const weatherInfo = document.getElementById('weather-info');
                    weatherInfo.innerHTML = ''; // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi hi·ªÉn th·ªã k·∫øt qu·∫£ m·ªõi

                    if (data.cod === "404") {
                        weatherInfo.innerHTML = '<p>Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë n√†y. Vui l√≤ng ki·ªÉm tra l·∫°i t√™n th√†nh ph·ªë.</p>';
                        return;
                    }

                    data.list.forEach(day => {
                        // T·∫°o th·∫ª hi·ªÉn th·ªã th√¥ng tin th·ªùi ti·∫øt cho m·ªói ng√†y
                        const weatherCard = document.createElement('div');
                        weatherCard.classList.add('weather-card');

                        // L·∫•y ng√†y
                        const date = new Date(day.dt * 1000);
                        const dateString = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;

                        // L·∫•y th√¥ng tin th·ªùi ti·∫øt
                        const temp = day.temp.day;
                        const description = day.weather[0].description;
                        const icon = `http://openweathermap.org/img/wn/${day.weather[0].icon}.png`;

                        // Th√™m th√¥ng tin v√†o th·∫ª
                        weatherCard.innerHTML = `
                            <h3>${dateString}</h3>
                            <img src="${icon}" alt="${description}">
                            <p>${description}</p>
                            <p>${temp}¬∞C</p>
                        `;

                        // Th√™m th·∫ª v√†o container
                        weatherInfo.appendChild(weatherCard);
                    });
                })
                .catch(error => {
                    console.error('C√≥ l·ªói khi l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt:', error);
                    document.getElementById('weather-info').innerHTML = '<p>Kh√¥ng th·ªÉ l·∫•y th√¥ng tin th·ªùi ti·∫øt.</p>';
                });
        }

        // L·∫Øng nghe s·ª± ki·ªán khi ng∆∞·ªùi d√πng nh·∫•n n√∫t t√¨m ki·∫øm
        document.getElementById('search-btn').addEventListener('click', function() {
            const city = document.getElementById('city-input').value.trim();
            if (city) {
                getWeather(city);
            } else {
                alert('Vui l√≤ng nh·∫≠p t√™n th√†nh ph·ªë.');
            }
        });

        // L·∫Øng nghe s·ª± ki·ªán nh·∫•n Enter ƒë·ªÉ t√¨m ki·∫øm
        document.getElementById('city-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('search-btn').click();
            }
        });
    </script>
</body>
</html> -->
