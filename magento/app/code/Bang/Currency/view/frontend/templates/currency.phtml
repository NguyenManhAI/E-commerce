<!-- HTML Template -->
<?php 
$ratesData = $block->getExchangeRates(); 
?>
<div class="container">
    <?php if (count($ratesData) === 1 && is_string(reset($ratesData))) : ?>
        <div class="currency-error-message">
            <p class="error-alert">Lỗi: <?= htmlspecialchars(reset($ratesData)) ?></p>
        </div>
    <?php else : ?>
        <div class="currency-converter">
            <h2>Tính giá mua bán ngoại tệ</h2>
            <div class="converter-inputs">
                <select id="source-currency">
                    <?php foreach ($ratesData as $rate) : ?>
                        <option value="<?= $rate->getCode() ?>"><?= $rate->getName() ?></option>
                    <?php endforeach; ?>
                </select>
                <input type="number" id="amount" placeholder="Nhập số tiền" min="0">
                <select id="conversion-type">
                    <option value="buy">Mua tiền mặt</option>
                    <option value="transfer">Mua chuyển khoản</option>
                    <option value="sell">Bán</option>
                </select>
            </div>
            <div class="converter-result">
                <p id="conversion-result">Kết quả: </p>
                <p id="conversion-error" class="error-message"></p>
            </div>
        </div>

        <table class="currency-rate-tbl">
            <thead>
                <tr>
                    <th>Mã ngoại tệ</th>
                    <th>Tên ngoại tệ</th>
                    <th>Mua tiền mặt</th>
                    <th>Mua chuyển khoản</th>
                    <th>Bán</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($ratesData as $currency => $rate) : ?>
                    <tr id="<?= $rate->getCode()?>">
                        <td><?= $rate->getCode()?></td>
                        <td><?= $rate->getName()?></td>
                        <td><?= $rate->getBuy()?></td>
                        <td><?= $rate->getTransfer()?></td>
                        <td><?= $rate->getSell()?></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    <?php endif; ?>
</div>

<style>
    <?php include __DIR__ . '/../web/css/styles.css'; ?>
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    <?php if (count($ratesData) > 1 || !is_string(reset($ratesData))) : ?>
    const currencyRates = <?= json_encode(array_map(function($rate) {
        return [
            'code' => $rate->getCode(),
            'buy' => $rate->getBuy(),
            'transfer' => $rate->getTransfer(),
            'sell' => $rate->getSell()
        ];
    }, $ratesData)) ?>;
    const conversionResultElement = document.getElementById('conversion-result');
    const conversionErrorElement = document.getElementById('conversion-error');

    function convertCurrency() {
        // Clear previous error and result
        conversionResultElement.textContent = 'Kết quả: ';
        conversionErrorElement.textContent = '';
        
        const sourceCurrency = document.getElementById('source-currency').value;
        const amount = parseFloat(document.getElementById('amount').value);
        const conversionType = document.getElementById('conversion-type').value;

        // Validate inputs
        if (!amount || amount <= 0) {
            conversionErrorElement.textContent = 'Vui lòng nhập số tiền hợp lệ';
            return;
        }

        // Find source currency rates
        const sourceRate = currencyRates.find(rate => rate.code === sourceCurrency);

        if (!sourceRate) {
            conversionErrorElement.textContent = 'Không tìm thấy tỷ giá cho loại tiền đã chọn';
            return;
        }

        // Get the appropriate rate based on conversion type
        const rate = parseFloat(sourceRate[conversionType].replace(/,/g, ''));

        if (!rate || isNaN(rate)) {
            conversionErrorElement.textContent = 'Không thể tìm tỷ giá cho loại chuyển đổi';
            return;
        }
        // Calculate the result
        const result = amount * rate;
        // Format the numbers with thousand separators
        const formattedAmount = amount.toLocaleString('vi-VN');
        const formattedResult = result.toLocaleString('vi-VN', { maximumFractionDigits: 2 });
        
        // Display the result with currency codes
        conversionResultElement.textContent = `${formattedAmount} ${sourceCurrency} = ${formattedResult} VND`;
    }

    // Add event listeners
    document.getElementById('source-currency').addEventListener('change', convertCurrency);
    document.getElementById('amount').addEventListener('input', convertCurrency);
    document.getElementById('conversion-type').addEventListener('change', convertCurrency);
    <?php endif; ?>
});
</script>